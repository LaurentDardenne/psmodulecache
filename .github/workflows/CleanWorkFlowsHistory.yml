name: CleanWorkFlowsHistory
on:
  workflow_dispatch:

jobs:
  ManageCachesWithGithubCli:
    runs-on: windows-latest
    steps:
      - name: Runs for the Workflows
        shell: pwsh
        run: |
          # !!!!!! Avoid recursive calls inside a CONSOLE : $env:GITHUB_WORKFLOW='CleanWorkFlowsHistory'
          # 'Owner/Repository'
          $OwnerAndRepository ='${{ github.repository }}'


          #Retrieve All Workflow except 3
          #We know the name of the worklfow
          $Workflows = gh workflow list --repo $OwnerAndRepository --all |
              ForEach-Object { $_ -replace "`t",';' } |
              ConvertFrom-CSV -Header Name,Status,ID -Delimiter ';' |
              Where-Object { $_.name -notIn @($env:GITHUB_WORKFLOW) }

          #Retrieve all run from the repository
          #We know the ID of the workflow

          #ID=databaseId
          #workflow_id=workflowDatabaseId
          #name=workflowName

          $AllRuns= gh run list --repo $OwnerAndRepository --json databaseId,workflowName,workflowDatabaseId -L 3000|ConvertFrom-Json
          $Runs=$AllRuns|Group-Object workflowDatabaseId -AsHashTable

          foreach ($Workflow in $Workflows) {
              $wkfName = $Workflow.Name

              #see https://github.com/PowerShell/PowerShell/issues/14264
              if ($PSVersionTable.PSEdition -eq 'Core')
              { $wkfID = $Workflow.ID -as [int64] }
              else
              { $wkfID = $Workflow.ID -as [int] }

              Write-Host "Delete the old runs ($($Runs.$wkfID.Databaseid.Count)) for the workflow '$wkfName' ($wkfID)."
              foreach ($RunID in $Runs.$wkfID.Databaseid) {
                  # Possible error :
                  #  HTTP 403: API rate limit exceeded for installation ID XYZ.
                  #  HTTP 403: Could not delete the workflow run ( ex : 'running' state )
                  gh run delete $RunID --repo $OwnerAndRepository
              }
          }

          Write-Host "Delete all caches."
          gh.exe cache delete --all --repo github.com/$OwnerAndRepository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
